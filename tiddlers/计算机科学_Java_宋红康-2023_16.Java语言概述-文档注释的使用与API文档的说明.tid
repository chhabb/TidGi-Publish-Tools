created: 20250308111123233
modified: 20250309021916270
tags: 计算机科学/Java/宋红康-2023
title: 计算机科学/Java/宋红康-2023/16.Java语言概述-文档注释的使用与API文档的说明

''具体使用2：文档注释（Java特有）''

* 文档注释内容可以被 JDK 提供的工具 javadoc 所解析，生成一套以网页文件形式体现的该程序的说明文档。

操作方式。比如：

```java
javadoc -d mydoc -author -version HelloWorld.java
```

!! 补漏

文档注释是 JAVA 特有的，那我们要说一说什么场景下使用这个文档注释。因为文档注释里边有多行的，那我们既然有多行注释，干嘛还引用它呢？它有特殊的作用。

文档注释内容可以被 jdk 提供的工具叫 JAVAdoc 所解析，生成一套以网页文件形式体现的该程序的说明的文档。

```java
/**
这是我的第一个Java程序。很开森！^_^

@author shkstart
@version 1.0

*/
public class CommentTest{
	public static void main(String[] args){
		System.out.println("hello,world!!");
	}
}
```

写完以后光看这个代码，这个层面看不出来与多行注释有什么区别，关键是要使用一个指令去做解析。这个指令是这样来写的：

```java
javadoc -d mydoc -author -version HelloWorld.java
```

这个就不用死记硬背了，直接按照这个固定格式操作一下就行。

mydoc 是我们生成的这个一系列文件，它有一个文件夹，这个文件夹这个名，这个你随便起。

然后再空格，这个叫 -author，因为咱们上面不是有 author 信息嘛，我就把这个也保留了，然后 -version。好再后边呢，就是我们当前这个原文件的名称，就可以了啊

回车，它会生成对应的一个文件夹，就在咱们当前的这个路径下，打开里边有好多的 html 格式的文件，去找 index，双击打开，这里边你会看到一些信息了。

这个信息就是我们刚才自己写的，而且只有文档注释的信息，没有多行注释的信息。所以说我们通过 JAVAdoc 可以去解析出来，咱们文档不是生成一套以网页格式存在的，关于当前这个类的一个介绍的信息。这就可以了，就像你这个类呢，你是干什么用的呀？里边有哪些功能啊？唉，你在这里边可以通过文档注释的方式呢，给它加上，然后生成这样的一套文档。

!! JAVA API文档

* API （Application Programming Interface，应用程序编程接口）是 Java 提供的基本编程接口。
* Java语言提供了大量的基础类，因此 Oracle 也为这些基础类提供了相应的说明文档，用于告诉开发者如何使用这些类，以及这些类里包含的方法。大多数Java书籍中的类的介绍都要参照它来完成，它是编程者经常查阅的资料。
* Java API文档，即为JDK使用说明书、帮助文档。
* 下载API文档：
** 在线看：https://docs.oracle.com/en/java/javase/17/docs/api/index.html
** 离线下载：https://www.oracle.com/java/technologies/javase-jdk17-doc-downloads.html

我给大家发的这个资料里边已经有了离线版本。找一下对这个资料，这有个资料，那这个API文档是吧？好打开以后的话呢，咱们现在用的是JAVA 17啊，其实就是这个啊，你把它解压以后，它里边呢是很多的，html 格式的这个文件。

点开以后有个 index.html，打开就跟咱们刚才在线看的是一样的。在这里边就可以去搜索，比如说 String，它是一个现成的 API，我想看看怎么去用，你就在这个位置，写这个String。写完以后，他这块给我们提示跟这个string相关的，就在这儿，JAVA.lang 包下的一个 string 点一下。这儿呢，就是关于这个类的一个使用。

当然了，大家发现好像不太方便是吧？这个是不是英文呐？确实有这样的问题啊，唉，那么我上课的时候呢，我会用 17 啊，也会用这个英文，然后呢，大家呢，如果说觉得有点困难的话呢？我这块呢，给大家提供了一个版本啊，目前呢，市面上咱们还没有中文版的 JAVA 17 的这个 API 啊。呃，比较好的一个呢，是 1.6 的，1.6 翻译的特别好，当然网上也有 1.8 的，但我觉得 1.8 翻译的有一些。准确度不太高啊，1.6 呢，咱们在基础阶段，其实学的大部分的 API 跟 17 呢，变化都不大，所以大家你看这个 1.6 呢，也没什么影响。

咱们学习的大部分的这个 API 呢，其实你看 1.6 呢都是没有问题的。