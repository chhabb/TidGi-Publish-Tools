created: 20250514165608545
modified: 20250514184756312
tags: 计算机科学/操作系统与虚拟化/Linux/知识体系
title: 计算机科学/操作系统与虚拟化/Linux/知识体系/列出文件和目录
type: text/vnd.tiddlywiki

ls 命令会显示当前目录下的文件和目录。

ls 目录名：显示该目录里面的内容。

!! ''选项''

!!! ''ls -F''

在每个列出的条目后面加一个符号，用来标识这个条目是什么类型的文件。

具体表现如下：

* /：目录
* *：可执行文件
* @：符号链接（软链接）
* =：套接字（socket）
* |：命名管道（FIFO）
* 没有任何后缀：普通文件（不可执行）

!!! ''ls -a''

隐藏文件是文件名以点号（.）开始的文件，这些文件并不会在ls命令的默认输出中出现，要想显示隐藏文件，可以使用-a选项。

!!! ''ls -R''

递归选项可以列出当前目录所包含的子目录中的文件（也包括子目录的子目录，一直递归下去，全部展开）。如果子目录数量众多，则输出结果会很长。

!!! ''[[选项合并|计算机科学/操作系统与虚拟化/Linux/知识体系/选项合并]]''

ls –F –R，可以合并为 ls –FR

你经常会发现有些参数组合不仅能够显示所需的内容，而且还容易记忆，比如ls –alF。

!!! ''ls -i''

ls -i 用于查看文件或目录的 inode编号。每个文件在 Linux 文件系统中都对应一个唯一的 inode（索引节点），这个 inode 存储了该文件的元信息（如权限、属主、大小、修改时间、磁盘位置等）。ls -i 会把这个 inode 编号显示在每个文件名前面。

!!! ''ls -l、ls -ld''

-l 选项会产生长列表格式的输出，提供目录中各个文件的详细信息。

在长列表格式输出中，每一行会列出一个文件或目录。除了文件名，输出中还包括其他有用信息。输出的第一行显示了为该目录中的文件所分配的总块数（8）。此后的每一行都包含了关于文件（或目录）的下列信息。

* 文件类型，比如目录（d）、文件（-）、链接文件（l）、字符设备（c）或块设备（b）
* 文件的权限（参见第7章）
* 文件的硬链接数（参见3.6.4节）
* 文件属主
* 文件属组
* 文件大小（以字节为单位）
* 文件的上次修改时间
* 文件名或目录名

如果想查看单个文件的长列表，那么只需在 ls -l 命令之后跟上该文件名即可。但如果想查看目录的相关信息，而非目录所包含的内容，则除了-l选项之外，还得添加 -d 选项，即 ls -ld Directory-Name。

-d 可以用来抑制进入目录内容，专注显示目录本体（显示目录自身的信息，而不是目录中的内容）。

!!! ''过滤器''

过滤器就是一个字符串，可用作简单的文本匹配。你可以将其作为命令行参数，放置在选项之后使用。

使用特定的文件名作为过滤器时，ls命令只会显示该文件的信息。有时你可能不知道要找的那个文件的确切名称。ls命令也能识别标准通配符（wildcard），并在过滤器中用其来进行模式匹配：

* 问号（?）代表过滤器字符串中任意位置的单个字符；
* 星号（*）代表过滤器字符串中任意位置的零个或多个字符。
* 方括号（[abc]、[a-i]）代表单个字符位置并给出了该位置上的多个可能的选择。你可以将可能的字符逐一列出，也可以指定字符范围，比如字母范围[a–i]。
* 惊叹号（[!a]）匹配不在方括号中列出的单个字符，将不需要的内容排除在外

注意：! 本身不是通配符，而是方括号字符类 [] 的一种用法，必须结合 []  使用。

!!! ''过滤器案例''

下面列出了几个常见的 `ls` 命令通配符及其组合使用的例子：

!!! 1. `ls a*.txt`

匹配所有以 `a` 开头、以 `.txt` 结尾的文件。
''输出''：`a.txt`、`aa.txt`、`ab.txt`、`ax.txt`

!!! 2. `ls ?.txt`

匹配只有一个字符的文件，且文件名以 `.txt` 结尾。
''输出''：`a.txt`、`b.txt`、`c.txt`（假设文件名只有一个字符）

!!! 3. `ls [abc]?.txt`

匹配文件名长度为 2，且第一位是 `a`、`b` 或 `c`，第二位是任意字符，文件后缀是 `.txt`。
''输出''：`a.txt`、`b.txt`、`c1.txt`

!!! 4. `ls [!a]*.txt`

匹配''不以 `a` 开头''的文件，且文件后缀是 `.txt`。
''输出''：`b.txt`、`c1.txt`、`d2.txt`、`e3.txt`、`bx.txt`、`cx.txt`

!!! 5. `ls *[!x].txt`

匹配所有 `.txt` 文件中，文件名最后一个字符\*\*不是 `x`\*\*的文件。
''输出''：`a.txt`、`b.txt`、`c1.txt`、`d2.txt`、`e3.txt`、`aa.txt`、`ab.txt`

!!! 6. `ls [a-c]*x.txt`

匹配文件名以 `a` 到 `c` 开头，且倒数第二个字符为 `x`，并且文件后缀是 `.txt`。
''输出''：`ax.txt`、`bx.txt`、`cx.txt`
