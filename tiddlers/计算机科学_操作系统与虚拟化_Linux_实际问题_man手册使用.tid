created: 20250514113723125
modified: 20250514113957430
tags: 计算机科学/操作系统与虚拟化/Linux/实际问题
title: 计算机科学/操作系统与虚拟化/Linux/实际问题/man手册使用
type: text/vnd.tiddlywiki

以下是你提供的思路整理、扩展、润色后的 man 手册全貌说明，结构完整、逻辑清晰、内容详尽。

---

!!! 一、man 手册概述

在类 Unix 操作系统中，`man` 是“manual（手册）”的缩写，是最基本也是最权威的帮助系统。它以章节为单位组织文档，提供对系统命令、库函数、系统调用、配置文件格式、设备、标准、宏包等的说明。几乎所有 Unix 工具、函数或配置格式，只要是正式发布的，都应有一份 `man` 手册页。

用户可以通过 `man` 命令随时查阅这些文档，无需联网，因此是系统自带的离线技术参考资料库。熟练使用 `man` 是掌握类 Unix 系统的基础。

---

!!! 二、man 手册的组成结构

man 手册由多个章节（section）组成，每一章收录一类内容。总共通常有 ''9 个主要章节''（不同系统可能扩展更多）：

| 章节编号 | 内容类型                   |
| ---- | ---------------------- |
| 1    | 用户命令（可执行的程序或 shell 命令） |
| 2    | 系统调用（内核提供的函数）          |
| 3    | 库函数（C 函数库，如 libc）      |
| 4    | 特殊文件（通常是 /dev 中的设备文件）  |
| 5    | 文件格式与约定（例如配置文件格式）      |
| 6    | 游戏与趣味程序                |
| 7    | 杂项（如宏包、约定、标准、语言等）      |
| 8    | 系统管理命令（只给 root 用户的工具）  |
| 9    | 内核开发接口（某些系统专有）         |

每一章下包含多个''页（page）''，每页是对某一个条目的独立描述。

每一页通常按以下段落组织（惯用字段名称）：

* ''名称（NAME）''：列出命令或函数的名称及简要说明。
* ''概要（SYNOPSIS）''：给出调用方式或用法。
* ''描述（DESCRIPTION）''：详细解释用法、参数、行为。
* ''选项（OPTIONS）''：命令行参数（如果适用）。
* ''返回值（RETURN VALUE）''：通常用于函数手册。
* ''错误（ERRORS）''：可能的错误情况。
* ''示例（EXAMPLES）''：示范常见的使用方式。
* ''参见（SEE ALSO）''：相关命令或函数。
* ''作者（AUTHOR）/版权信息等''：可选内容。

并非每一页都包含所有段落，但整体风格统一，易于查阅。

---

!!! 三、man 命令的用途

`man` 命令是查看手册页的工具，配合章节和页名使用。它会根据系统配置在手册路径中查找对应的文档，并使用 `less` 或其他分页器显示。

通过 `man`，你可以：

* 指定章节查看特定文档
* 搜索手册页
* 输出或打印手册内容
* 查看本地文件形式的手册页

---

!!! 四、man 命令语法格式

man 支持多种模式的调用，其完整语法形式如下：

    man [man 选项] [[章节] 页 ...] ...
    man -k [apropos 选项] 正则表达式 ...
    man -K [man 选项] [章节] 关键词 ...
    man -f [whatis 选项] 页 ...
    man -l [man 选项] 文件 ...
    man -w|-W [man 选项] page ...

含义如下：

* ''man \[章节] 页''：查找并显示手册页
* ''-k 正则''：搜索匹配描述中包含关键字的手册页（等价于 `apropos`）
* ''-K 关键词''：在所有手册页中全文搜索（较慢）
* ''-f 页''：查找并显示概要（等价于 `whatis`）
* ''-l 文件''：从本地文件加载手册页显示
* ''-w / -W''：显示将要访问的手册页文件路径，而不显示内容

---

!!! 五、如何查看有哪些章节

使用以下命令查看系统中可用的章节及其路径：

```bash
man -d man
```

或者查看 `manpath` 设置：

```bash
manpath
```

还可以直接查阅 `man man` 的 SEE ALSO 部分，其中列出常见章节。

---

!!! 六、如何查看某一章节有哪些页

可以使用 `man -k` 或 `apropos` 命令结合 grep 过滤特定章节：

```bash
man -k . | grep "(1)"
```

这将列出所有第 1 章的手册页。括号中的数字代表章节编号。也可以换成 2、3、7 等。

---

!!! 七、典型使用示例详解

以下是一些实际使用 `man` 的例子，演示其灵活性：

```
man ls
```

显示用户命令 `ls` 的手册页，默认从第 1 章查找。

```
man 1 intro
```

查看第 1 章的 `intro` 页，通常是该章节的总引导说明。

```
man man.7
```

显示第 7 章中关于 `man` 宏包的文档。这是“man 7 man”的另一种写法。

```
man 'man(7)'
```

另一种书写方式，在交叉引用或复制手册页链接时更常见。为了避免 shell 解释括号，需使用引号。

```
man -a intro
```

显示所有章节中名为 `intro` 的手册页，按顺序依次展示。

```
man -t bash | lpr -Pps
```

将 `bash` 的手册页格式化为 PostScript 并通过管道送至名为 `ps` 的打印机。此处 `-t` 调用的是 `groff` 排版系统。

```
man -l -Tdvi ./foo.1x.gz > ./foo.1x.dvi
```

将本地压缩的手册页源文件解压并格式化为 DVI 文件。适用于查看非系统路径下的手册页。

```
man -k printf
```

查找所有描述中包含 `printf` 的手册页标题和说明，相当于：

```
apropos printf
```

```
man -f smail
```

列出 `smail` 的手册摘要，相当于：

```
whatis smail
```

---

这样整理后，你可以对 man 系统形成一个结构清晰、使用方法明确的全景理解。后续如果你还需要具体介绍每个章节的示例页、man 配置文件（如 manpath、man.conf）、手册页撰写规范（groff 格式），也可进一步补充。
