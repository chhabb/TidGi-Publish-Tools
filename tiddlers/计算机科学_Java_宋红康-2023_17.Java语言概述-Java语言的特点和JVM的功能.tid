created: 20250309014107408
modified: 20250309023800063
tags: 计算机科学/Java/宋红康-2023
title: 计算机科学/Java/宋红康-2023/17.Java语言概述-Java语言的特点和JVM的功能

!! Java语言的优缺点

!!! 优点

* 跨平台性：这是 Java 的核心优势。Java 在最初设计时就很注重移植和跨平台性。比如：Java 的 int 永远都是 32 位。不像 C++ 可能是 16、32，可能是根据编译器厂商规定的变化。

** 通过 Java 语言编写的应用程序在不同的系统平台上都可以运行。“`Write once , Run Anywhere`”。

** 原理：只要在需要运行 java 应用程序的操作系统上，先安装一个 Java 虚拟机（JVM，Java `V`irtual `M`achine）即可。由 JVM 来负责 Java 程序在该系统中的运行。

* 面向对象性：面向对象是一种程序设计技术，非常适合大型软件的设计和开发。面向对象编程支持封装、继承、多态等特性，让程序更好达到高内聚，低耦合的标准。

* 健壮性：吸收了 C/C++ 语言的优点，但去掉了其影响程序健壮性的部分（如指针、内存的申请与释放等），提供了一个相对安全的内存管理和访问机制。

* 安全性高：Java 适合于网络/分布式环境，需要提供一个安全机制以防恶意代码的攻击。如：`安全防范机制`（ClassLoader 类加载器），可以分配不同的命名空间以防替代本地的同名类、字节代码检查。

* 简单性：Java 就是 C++ 语法的`简化版`，我们也可以将 Java 称之为“`C++--`”。比如：头文件，指针运算，结构，联合，操作符重载，虚基类等。

* 高性能：
** Java最初发展阶段，总是被人诟病“`性能低`”；客观上，高级语言运行效率总是低于低级语言的，这个无法避免。Java语言本身发展中通过虚拟机的优化提升了`几十倍运行效率`。比如，通过 JIT（JUST IN TIME）即时编译技术提高运行效率。
** `Java 低性能的短腿，已经被完全解决了`。业界发展上，我们也看到很多 C++ 应用转到 Java 开发，很多 C++ 程序员转型为 Java 程序员。

!!! 缺点

* `语法过于复杂、严谨`，对程序员的约束比较多，与 python、php 等相比入门较难。但是一旦学会了，就业岗位需求量大，而且`薪资待遇节节攀升`。

* 一般适用于大型网站开发，`整个架构会比较重`，对于初创公司开发和维护人员的成本比较高（即薪资高），选择用 Java 语言开发网站或应用系统的需要一定的经济实力。

* `并非适用于所有领域`。比如，Objective C、Swift 在 iOS 设备上就有着无可取代的地位。浏览器中的处理几乎完全由 JavaScript 掌控。Windows 程序通常都用 C++ 或 C# 编写。Java 在服务器端编程和跨平台客户端应用领域则很有优势。

!! JVM 功能说明

JVM（`J`ava `V`irtual `M`achine ，Java虚拟机）：是一个虚拟的计算机，是 Java 程序的运行环境。JVM 具有指令集并使用不同的存储区域，负责执行指令，管理数据、内存、寄存器。

[img[image-20220310165805739.png]]

功能 1：实现 Java 程序的跨平台性

我们编写的 Java 代码，都运行在 **JVM** 之上。正是因为有了 JVM，才使得 Java 程序具备了跨平台性。

功能2：自动内存管理（内存分配、内存回收）

* Java程序在运行过程中，涉及到运算的`数据的分配`、`存储`等都由JVM来完成
* Java消除了程序员回收无用内存空间的职责。提供了一种系统级线程跟踪存储空间的分配情况，在内存空间达到相应阈值时，检查并释放可被释放的存储器空间。
* GC的自动回收，提高了内存空间的利用效率，也提高了编程人员的效率，很大程度上`减少了`因为没有释放空间而导致的`内存泄漏`。


<<<.tc-big-quote
面试题：Java程序还会出现内存溢出和内存泄漏问题吗？  Yes!
<<<

!! 补漏

!!! 优点和缺点

* 咱们在编译的时候针对的是源文件，源文件编译以后生成字节码文件，接下来使用 java.exe 指令解释运行字节码文件，一旦解释运行了，就要使用内存的资源执行这个程序，那么这个时候 JVM 帮我们去做整个程序内存的分配和执行。

* JAVA 语言有个优点叫跨平台性，也就是说，我们只需要编写一份 JAVA 代码，就可以让它在不同的操作系统上去运行。那么怎么能够实现这样一个特征呢？主要原因归结于 JVM。我们在不同的操作系统上安装不同版本的 JVM，我们的程序不是说直接在这个操作系统上去运行的，而是在你操作系统上的 JVM 里边去运行的。给你提供了一个良好的环境，所以呢，我们只需要写一份就可以了，把这种特性呢，我们称为 `write once run anywhere`，一次编写，到处运行。

* JVM 在不同的操作系统下是不一样的，而它又包含在 JDK 里边，那么各个不同的系统的 JVM 不一样，那么各个系统的 JDK 是不是也不一样了。所以咱们装 JDK 的时候，你得看清楚你是装 WINDOWS 版的还是装 MAC 版的还是 linux 版的，因为 JDK 的 JVM 不一样。

第二个特点叫面向对象性。JAVA 是个面向对象语言，我这一句话带过了，后边我们再专门讲这个面向对象的这个特征。

第三个叫做健壮性。基本上现在的一些语言都是基于 c 的，JAVA 也同样如此，它吸收了 c 和 C++ 语言的优点，去掉了影响其健壮性的部分，比如说，在 c 里边我们有大量的指针，指向这个内存的具体的位置，往后移几个位置就下一个数据。那么在 JAVA 里边，我们使用的话，就把这个指针给它去掉了，处理起来的太繁琐，就给去了啊。然后另外一个就是，你要使用 C 语言去编写程序的话，你使用了内存了。那么你还要手动的把这个内存空间不用的时候呢，要释放掉，那程序员经常可能就忘了，一旦忘了那这个内存就会泄露。那么JAVA 程序员说你就不用管这个事儿了，整个内存的分配还有释放我自动的帮你去做。哎，很高级哎，所以这个呢，就使得我们 JAVA 程序的这个健壮性会更好一些，怎么能够实现这个事儿，一会我们讲 JVM 的时候来说。

下边一个叫安全性高，有这个比较好的安全防范机制，比如想使用这个类的加载器，等等，让它更安全。这个以后我们专门说到 JVM 的时候呢，再讲。

下边这个呢，叫简单性。JAVA 语言可以看成是 c++ 语言的一个简化版，C++ 语言的 -- 版，这叫简单性，相较于 c 语言、c++ 语言来讲，JAVA 要易学一些。

然后下一个叫高性能。那这里边就提到了在 JAVA 最初发展的时候，总会被人诟病为性能低，相较于 c 和 C++ 来说，但实际上现在 JAVA 已经今非昔比了。因为它有非常牛的 JVM，里边儿的 JIT，这个我们叫即时编译器啊，可以针对这个代码提前就把它针对热点代码给它提前编译出来并且缓存了，甚至说呢，这个性能可以达到跟 c、c++ 不相上下的这个程度。所以这已经不是当初的那个性能低的 JAVA。

那么这是 JAVA 程序的优点，缺点是什么呢？语法相较于，比如像 PHP、python 来讲还是比较复杂的，往好里说叫严谨，那么语法比较复杂，大家学 JAVA 我们要学一个月，那当你后边想再学 python 的时候，我也说了啊在你工作之余，一周时间就够。哎，所以呢，你再接触一些语法简单的话，你上手会很快的啊，包括呢，后边我们讲这个 JavaScript 在第二阶段讲。JavaScript 也是一个面向对象的编程语言，这个咱们讲多久呢？咱们讲一天，这一天你也会发现它讲的还挺细致的。所以说呢，你在接触一些相关的语言的时候，学的会很快啊。

然后说一般适用于大型网站的开发啊，整个架构呢，会显得比较重一些。经常呢，有这种创业型的公司。比如说就几个人，他想快速的把这个网站搭建起来，他可能会选择 PHP 或者是 python，很快啊，哎，你要选 JAVA 的话呢，他这个底儿建的就需要比较厚重一些。也就说JAVA呢，其实主要呢是针对这种中大型的网站开发啊来做的。啊，当然呢，你对一些初创型公司，你要后期这个网站要重写的话，那你还要改成JAVA，那也是比较费力这个事儿，所以很多公司呢，可能在一开始的时候就也选择JAVA，直接做后台了。

并非适用于所有领域。这个咱们知道不同的语言都有不同的特点啊，适用的场景也不一样。

!!! JVM 功能说明

字节码文件是跑在 JVM 当中的，JVM 是安装在具体的操作系统里，操作系统再去调具体的内存、CPU 帮我们做具体的计算，这样的一个过程。

关于 JVM 这块儿呢，想给大家提它的两个主要的功能，第一个功能实现 JAVA 程序的跨平台性。刚才我们讲过这个事儿，把它归结为JAVA的一个优点，那这个JAVA的优点呢？就是因为有 JVM 存在，所以我们可以实现这个跨平台的特征。

简单说一下啊，你像我们写的这个 c 语言程序，因为你要在不同的指令集下去运行，你要没有这个所谓的像 JVM 这样一个结构的话，你得针对于不同的这种指令集去编写相关的这种代码。那这块如果有 m 种程序，右边呢有 n 种这个指令集，那一共是 m * n 种编译器，很复杂。但是你如果要有了 JVM 以后，我们只需要面向 JVM 进行编程就可以了，这有 m 种程序，这个 JVM 会帮你在相应的平台下解释运行，这呢是有 n 个指令集，就是 m + n，一切呢，变得都简单起来。好具体的细节呢，以后我们再慢慢了解

那么第二个功能，就是自动的内存管理机制。这儿体现为两方面，一个叫内存的自动分配，第二叫内存的自动回收。这个其实很方便，就有点像咱们家里边大家雇了一个保姆一样，你回家以后，比如说你的衣服啊，你的包儿啊，你一进门儿，它就自动说哎，我来帮你放。唉，把相应的东西呢就放到指定位置了，然后呢，你自己在家里边儿啊，比如吃饭，吃完饭以后呢，你这个呃，这这一些这个要洗的这样一些锅碗瓢盆儿吧，是吧？你不用管啊，它自动的会帮你去清理收拾。太方便了是吧？唉，这个呢，就是 JVM 它的一个作用.以前的话呢你要是 c，或者 c++，你可能得自己呢去分配自己呢去回收，你要忘了，那就泄露了。啊，这里边提到个词叫内存泄露。啥叫内存泄露啊？多了溢出来了，那叫内存溢出。所以这块儿有了一个面试题，说JAVA程序还会出现内存泄露和内存溢出的问题吗？诶，我这写了会，那不是有自动的内存管理呢？那咋就还泄露还溢出呢是吧？唉，那通过这个呢，咱们把这个面试题说一下啊，首先什么叫内存溢出？啥叫溢出啊？这个你对你女朋友这个感情特别好啊，对她的爱呢，都用不完，都溢出来了是吧？啥叫溢出呢？就是超出了你本身这个容量范围了，叫溢出。这个内存的话呢？我们假设两个g。啊，两个g呢，那就意味着你占用的话呢，最多只能分配两个g的数据放到这里边，现在呢，放不下了啊，那这时候呢，不就溢出了吗？一旦溢出了，你想这个数据根本都放不到内存里边，这个程序是不是就报错了？唉，所以内存溢出的话呢，就会报错啊。那问说JAVA程序还会溢出吗？你不是说你会自动的，会清理这些垃圾吗？关键问题就是这些数据，也不是垃圾呀。你不是垃圾，我就清理不了，那你这块还多，那当然还是会溢出的啊，没问题。

好下边儿叫内存泄露，那什么叫泄露？JAVA中的这个泄露。诶，我说一下啊，大家来理解。比如你回家了哎，假设你感冒了是吧啊，这个身体不好是吧，然后呢，你自己往这个比如说鼻涕啊。直接把这个纸就扔到地上了，这其实是不是应该是垃圾呀？啊，就是你自己或者咱们作为程序员，明明是垃圾了，我给扔到地上了，但是呢，这个机器人儿就是 JVM 它自动的帮你去清理垃圾的，结果呢，它走到这个纸这块的时候呢，它判断以后。他如果认为这也是垃圾，那他就回收了。那这就没有泄露问题。什么叫泄露呢？就是明明啊，我扔到地上的这个纸是垃圾，我是程序员，我知道这是垃圾，但是他不认为这是垃圾。他就看了看，他就走了。这就是泄露。啊，这就叫泄露。啊，这个大家去体会一下啊，好，那么以后呢，我们会去讲说 JVM 它判断这个是不是垃圾的标准是什么？这个会有相关的算法来支持的。OK啊，行。

<<<.tc-big-quote
内存泄露多了可能导致内存溢出，泄露一点点的话，如果内存很大，就不会有什么问题
<<<

那么，内存泄露。严重吗？你觉得这个事儿重要吗？重要啊，你看啊，内存溢出呢，只要溢出这个程序就挂了，所以你很容易知道啊，出现溢出问题了。但是内存泄露呢，是不太容易发现的，你可能这个程序呢，你运行完诶，挺好的是吧？哎，你这个垃圾有有就有呗，又不影响我使用，我内存这么大呢是吧？哎，可能还没事，但关键问题就是如果你要泄露问题多的话。可能还是会导致溢出的。就像你家里边儿呢，本来就那么大空间，然后你咔咔一顿扔，然后呢，他还不认为这是垃圾，你扔多了盛不下了，不就照样溢出了吗？那你就相当于在内存当中啊，这块儿呢，是咱们知道这是垃圾，我也不再去使用了，但是呢，这个 JVM 呢，他一判断发现呢，他不认为这是垃圾，你像这个空间，如果占的多了，最后呢，也满了，是不是就溢出了？所以呢，''内存泄露多了，会导致内存溢出。''在面试当中通常还会再问，你说你能举一些内存泄露的例子吗？啊，那么现在呢？大家要回答说不能是吧？呵呵，因为我们刚开始讲咱们还没有讲过具体例子，后边呢，咱们慢慢的来接触哎，就会给大家举很多的例子了啊。好，那么这儿呢？是关于啊JAVA语言的特点和 JVM 的一个主要的功能啊，大家呢去体会一下。