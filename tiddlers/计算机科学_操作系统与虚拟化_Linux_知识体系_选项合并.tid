created: 20250514171212881
modified: 20250514171319257
tags: 计算机科学/操作系统与虚拟化/Linux/知识体系
title: 计算机科学/操作系统与虚拟化/Linux/知识体系/选项合并
type: text/vnd.tiddlywiki

Linux 命令行中使用选项有一套通用的规则，尤其是对短选项（如 `-a`、`-l`）的合并使用。以下是清晰明确、通用适用的规则总结：

---

!!! 一、短选项（`-` 开头的一位字母）

!!!! 可以合并的情况：

* 所有选项都是单个字母，且''不需要参数''
* 合并时字母紧贴在一起，写成一个 `-` 开头的字符串
* ''顺序通常不重要''，除非某些程序特殊处理（极少数）

''示例：''

```bash
ls -l -a -h       # 原始写法
ls -lah           # 合并写法，等价
```

---

!!! 二、带参数的短选项

!!!! 不可随意合并，必须注意位置：

* ''带参数的选项必须放在合并串的最后一个''
* 参数必须紧跟其后，或以空格分隔

''示例：''

```bash
tar -x -v -f file.tar      # 正确
tar -xvf file.tar          # 正确，f 是最后一个，后面跟参数

tar -xfv file.tar          # 错误，f 后面不是 file.tar
```

---

!!! 三、参数写法

* 如果参数是独立项，通常用空格分隔：`-f file.tar`
* 少数程序允许直接接上：`-ffile.tar`，但不通用，''建议使用空格''

---

!!! 四、长选项（`--` 开头）

* 不能合并，只能单独使用
* 参数写法通常是 `--option=value` 或 `--option value`

''示例：''

```bash
grep --ignore-case --line-number
grep --color=always
```

---

!!! 五、位置依赖（小心顺序）

* 一些命令要求某些选项''必须''在参数前，例如 `tar`、`dd` 等
* 例如 `tar -xvf file.tar` 是标准写法，而 `tar file.tar -xvf` 不一定有效

---

!!! 六、混合用法（短 + 长）

* 可以同时使用短选项和长选项，但不能在同一串中混合
* 如：`command -a --long` 是允许的，但 `command -a--long` 是错误的

---

!!! 总结重点规则：

# 短选项可合并，但''不能合并带参数的''
# 带参数的短选项应放在最后一个，参数紧跟或空格分隔
# 长选项不可合并，参数建议使用 `=` 或空格方式
# 命令具体实现不同，''man 手册中说明最准确''

你可以用 `man 命令名` 查看具体命令的选项格式，例如 `man ls`、`man tar`。
